

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Mar 14 22:36:13 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F917
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F917 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0110                     	;# 
   124  0111                     	;# 
   125  0112                     	;# 
   126  0113                     	;# 
   127  0114                     	;# 
   128  0115                     	;# 
   129  0116                     	;# 
   130  0117                     	;# 
   131  0118                     	;# 
   132  0119                     	;# 
   133  011A                     	;# 
   134  011B                     	;# 
   135  011C                     	;# 
   136  011D                     	;# 
   137  011E                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0110                     	;# 
   212  0111                     	;# 
   213  0112                     	;# 
   214  0113                     	;# 
   215  0114                     	;# 
   216  0115                     	;# 
   217  0116                     	;# 
   218  0117                     	;# 
   219  0118                     	;# 
   220  0119                     	;# 
   221  011A                     	;# 
   222  011B                     	;# 
   223  011C                     	;# 
   224  011D                     	;# 
   225  011E                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0110                     	;# 
   300  0111                     	;# 
   301  0112                     	;# 
   302  0113                     	;# 
   303  0114                     	;# 
   304  0115                     	;# 
   305  0116                     	;# 
   306  0117                     	;# 
   307  0118                     	;# 
   308  0119                     	;# 
   309  011A                     	;# 
   310  011B                     	;# 
   311  011C                     	;# 
   312  011D                     	;# 
   313  011E                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  0018                     _RCSTA	set	24
   317  0019                     _TXREG	set	25
   318  000B                     _INTCON	set	11
   319  0099                     _SPBRG	set	153
   320  0098                     _TXSTA	set	152
   321  008F                     _OSCCON	set	143
   322  04C5                     _TXEN	set	1221
   323  0464                     _TXIE	set	1124
   324                           
   325                           	psect	strings
   326  0003                     __pstrings:
   327  0003                     stringtab:
   328  0003                     __stringtab:
   329  0003                     stringcode:	
   330                           ;	String table - string pointers are 1 byte each
   331                           
   332  0003                     stringdir:
   333  0003  3000               	movlw	high stringdir
   334  0004  008A               	movwf	10
   335  0005  0804               	movf	4,w
   336  0006  0A84               	incf	4,f
   337  0007  0782               	addwf	2,f
   338  0008                     __stringbase:
   339  0008  3400               	retlw	0
   340  0009                     __end_of__stringtab:
   341  0009                     STR_1:
   342  0009  3448               	retlw	72	;'H'
   343  000A  3465               	retlw	101	;'e'
   344  000B  346C               	retlw	108	;'l'
   345  000C  346C               	retlw	108	;'l'
   346  000D  346F               	retlw	111	;'o'
   347  000E  3400               	retlw	0
   348                           
   349                           	psect	cinit
   350  07FC                     start_initialization:	
   351                           ; #config settings
   352                           
   353  07FC                     __initialization:
   354  07FC                     end_of_initialization:	
   355                           ;End of C runtime variable initialization code
   356                           
   357  07FC                     __end_of__initialization:
   358  07FC  0183               	clrf	3
   359  07FD  120A  118A  2FC0   	ljmp	_main	;jump to C main() function
   360                           
   361                           	psect	cstackCOMMON
   362  0070                     __pcstackCOMMON:
   363  0070                     ??_usart_init:
   364  0070                     ??_uart_send_char:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ??_printf:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_putch:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ??_putch:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ??_clock_init:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_usart_init:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_uart_send_char:	
   383                           ; 2 bytes @ 0x0
   384                           
   385  0070                     ?_printf:	
   386                           ; 2 bytes @ 0x0
   387                           
   388  0070                     ?_clock_init:	
   389                           ; 2 bytes @ 0x0
   390                           
   391  0070                     ?_main:	
   392                           ; 2 bytes @ 0x0
   393                           
   394  0070                     clock_init@bits:	
   395                           ; 2 bytes @ 0x0
   396                           
   397  0070                     uart_send_char@c:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     usart_init@tx_bits:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     putch@c:	
   404                           ; 1 bytes @ 0x0
   405                           
   406                           
   407                           ; 1 bytes @ 0x0
   408  0070                     	ds	1
   409  0071                     usart_init@rx_bits:
   410  0071                     printf@ap:	
   411                           ; 1 bytes @ 0x1
   412                           
   413                           
   414                           ; 1 bytes @ 0x1
   415  0071                     	ds	1
   416  0072                     printf@c:
   417                           
   418                           ; 1 bytes @ 0x2
   419  0072                     	ds	1
   420  0073                     printf@f:
   421                           
   422                           ; 1 bytes @ 0x3
   423  0073                     	ds	1
   424  0074                     ??_main:
   425  0074                     main@inter_bits:	
   426                           ; 1 bytes @ 0x4
   427                           
   428                           
   429                           ; 1 bytes @ 0x4
   430  0074                     	ds	1
   431                           
   432                           	psect	maintext
   433  07C0                     __pmaintext:	
   434 ;;
   435 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   436 ;;
   437 ;; *************** function _main *****************
   438 ;; Defined at:
   439 ;;		line 31 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;  inter_bits      1    4[COMMON] struct .
   444 ;;  c               1    0        unsigned char 
   445 ;; Return value:  Size  Location     Type
   446 ;;                  2   17[None  ] int 
   447 ;; Registers used:
   448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : B00/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         1       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0
   457 ;;      Totals:         1       0       0       0       0
   458 ;;Total ram usage:        1 bytes
   459 ;; Hardware stack levels required when called: 2
   460 ;; This function calls:
   461 ;;		_clock_init
   462 ;;		_printf
   463 ;;		_uart_send_char
   464 ;;		_usart_init
   465 ;; This function is called by:
   466 ;;		Startup code after reset
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470  07C0                     _main:	
   471                           ;psect for function _main
   472                           
   473  07C0                     l699:	
   474                           ;incstack = 0
   475                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   476                           
   477  07C0  17F4               	bsf	main@inter_bits,7
   478  07C1  1774               	bsf	main@inter_bits,6
   479  07C2                     l701:
   480  07C2  0874               	movf	main@inter_bits,w
   481  07C3  008B               	movwf	11	;volatile
   482  07C4                     l703:
   483  07C4  120A  118A  279E  120A  118A  	fcall	_clock_init
   484  07C9                     l705:
   485  07C9  120A  118A  27A8  120A  118A  	fcall	_usart_init
   486  07CE                     l707:
   487  07CE  30FF               	movlw	255
   488  07CF  120A  118A  2798  120A  118A  	fcall	_uart_send_char
   489  07D4                     l709:
   490  07D4  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   491  07D5  120A  118A  27DD  120A  118A  	fcall	_printf
   492  07DA                     l18:
   493  07DA  120A  118A  2800   	ljmp	start
   494  07DD                     __end_of_main:
   495                           
   496                           	psect	text1
   497  07A8                     __ptext1:	
   498 ;; *************** function _usart_init *****************
   499 ;; Defined at:
   500 ;;		line 10 in file "uart.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  rx_bits         1    1[COMMON] struct .
   505 ;;  tx_bits         1    0[COMMON] struct .
   506 ;; Return value:  Size  Location     Type
   507 ;;                  2    6[None  ] int 
   508 ;; Registers used:
   509 ;;		wreg
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   515 ;;      Params:         0       0       0       0       0
   516 ;;      Locals:         2       0       0       0       0
   517 ;;      Temps:          0       0       0       0       0
   518 ;;      Totals:         2       0       0       0       0
   519 ;;Total ram usage:        2 bytes
   520 ;; Hardware stack levels used: 1
   521 ;; This function calls:
   522 ;;		Nothing
   523 ;; This function is called by:
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528  07A8                     _usart_init:	
   529                           ;psect for function _usart_init
   530                           
   531  07A8                     l649:	
   532                           ;incstack = 0
   533                           ; Regs used in _usart_init: [wreg]
   534                           
   535                           
   536                           ;uart.c: 14:     TXSTAbits_t tx_bits;;uart.c: 15:     tx_bits.CSRC = 0;
   537  07A8  13F0               	bcf	usart_init@tx_bits,7
   538                           
   539                           ;uart.c: 16:     tx_bits.TX9 = 0;
   540  07A9  1370               	bcf	usart_init@tx_bits,6
   541                           
   542                           ;uart.c: 17:     tx_bits.SYNC = 0;
   543  07AA  1270               	bcf	usart_init@tx_bits,4
   544                           
   545                           ;uart.c: 18:     tx_bits.BRGH = 1;
   546  07AB  1570               	bsf	usart_init@tx_bits,2
   547  07AC                     l651:
   548                           
   549                           ;uart.c: 19:     TXSTA = *((unsigned char*) &tx_bits);
   550  07AC  0870               	movf	usart_init@tx_bits,w
   551  07AD  1683               	bsf	3,5	;RP0=1, select bank1
   552  07AE  1303               	bcf	3,6	;RP1=0, select bank1
   553  07AF  0098               	movwf	24	;volatile
   554  07B0                     l653:
   555                           
   556                           ;uart.c: 20:     TXIE = 1;
   557  07B0  160C               	bsf	12,4	;volatile
   558  07B1                     l655:
   559                           
   560                           ;uart.c: 21:     TXEN = 1;
   561  07B1  1698               	bsf	24,5	;volatile
   562  07B2                     l657:
   563                           
   564                           ;uart.c: 23:     RCSTAbits_t rx_bits;;uart.c: 24:     rx_bits.SPEN = 1;
   565  07B2  17F1               	bsf	usart_init@rx_bits,7
   566  07B3                     l659:
   567                           
   568                           ;uart.c: 25:     rx_bits.RX9 = 0;
   569  07B3  1371               	bcf	usart_init@rx_bits,6
   570  07B4                     l661:
   571                           
   572                           ;uart.c: 26:     rx_bits.SREN = 0;
   573  07B4  12F1               	bcf	usart_init@rx_bits,5
   574  07B5                     l663:
   575                           
   576                           ;uart.c: 27:     rx_bits.CREN = 1;
   577  07B5  1671               	bsf	usart_init@rx_bits,4
   578  07B6                     l665:
   579                           
   580                           ;uart.c: 28:     rx_bits.ADDEN = 0;
   581  07B6  11F1               	bcf	usart_init@rx_bits,3
   582                           
   583                           ;uart.c: 30:     RCSTA = *((unsigned char*) &rx_bits);
   584  07B7  0871               	movf	usart_init@rx_bits,w
   585  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   586  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   587  07BA  0098               	movwf	24	;volatile
   588                           
   589                           ;uart.c: 32:     SPBRG = 12;
   590  07BB  300C               	movlw	12
   591  07BC  1683               	bsf	3,5	;RP0=1, select bank1
   592  07BD  1303               	bcf	3,6	;RP1=0, select bank1
   593  07BE  0099               	movwf	25	;volatile
   594  07BF                     l36:
   595  07BF  0008               	return
   596  07C0                     __end_of_usart_init:
   597                           
   598                           	psect	text2
   599  0798                     __ptext2:	
   600 ;; *************** function _uart_send_char *****************
   601 ;; Defined at:
   602 ;;		line 5 in file "uart.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  c               1    wreg     unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  c               1    0[COMMON] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  2    8[None  ] int 
   609 ;; Registers used:
   610 ;;		wreg
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         1       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0
   619 ;;      Totals:         1       0       0       0       0
   620 ;;Total ram usage:        1 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_main
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629  0798                     _uart_send_char:	
   630                           ;psect for function _uart_send_char
   631                           
   632                           
   633                           ;incstack = 0
   634                           ; Regs used in _uart_send_char: [wreg]
   635                           ;uart_send_char@c stored from wreg
   636  0798  00F0               	movwf	uart_send_char@c
   637  0799                     l669:
   638                           
   639                           ;uart.c: 6:     TXREG = c;
   640  0799  0870               	movf	uart_send_char@c,w
   641  079A  1283               	bcf	3,5	;RP0=0, select bank0
   642  079B  1303               	bcf	3,6	;RP1=0, select bank0
   643  079C  0099               	movwf	25	;volatile
   644  079D                     l33:
   645  079D  0008               	return
   646  079E                     __end_of_uart_send_char:
   647                           
   648                           	psect	text3
   649  07DD                     __ptext3:	
   650 ;; *************** function _printf *****************
   651 ;; Defined at:
   652 ;;		line 477 in file "G:\nainstalovane_programy\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;  f               1    wreg     PTR const unsigned char 
   655 ;;		 -> STR_1(6), 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;  f               1    3[COMMON] PTR const unsigned char 
   658 ;;		 -> STR_1(6), 
   659 ;;  tmpval          4    0        struct .
   660 ;;  cp              2    0        PTR const unsigned char 
   661 ;;  len             2    0        unsigned int 
   662 ;;  val             2    0        unsigned int 
   663 ;;  c               1    2[COMMON] unsigned char 
   664 ;;  ap              1    1[COMMON] PTR void [1]
   665 ;;		 -> ?_printf(2), 
   666 ;;  flag            1    0        unsigned char 
   667 ;;  prec            1    0        char 
   668 ;; Return value:  Size  Location     Type
   669 ;;                  2   10[None  ] int 
   670 ;; Registers used:
   671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   677 ;;      Params:         0       0       0       0       0
   678 ;;      Locals:         3       0       0       0       0
   679 ;;      Temps:          1       0       0       0       0
   680 ;;      Totals:         4       0       0       0       0
   681 ;;Total ram usage:        4 bytes
   682 ;; Hardware stack levels used: 1
   683 ;; Hardware stack levels required when called: 1
   684 ;; This function calls:
   685 ;;		_putch
   686 ;; This function is called by:
   687 ;;		_main
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691  07DD                     _printf:	
   692                           ;psect for function _printf
   693                           
   694                           
   695                           ;incstack = 0
   696                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   697                           ;printf@f stored from wreg
   698  07DD  00F3               	movwf	printf@f
   699  07DE                     l693:
   700                           
   701                           ;G:\nainstalovane_programy\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 477: pri
      +                          ntf(const char * f, ...);G:\nainstalovane_programy\Microchip\xc8\v2.36\pic\sources\c90\c
      +                          ommon\doprnt.c: 478: {;G:\nainstalovane_programy\Microchip\xc8\v2.36\pic\sources\c90\com
      +                          mon\doprnt.c: 479:  va_list ap;;G:\nainstalovane_programy\Microchip\xc8\v2.36\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;G:\nainstalovane_programy\Microchip\xc8\v2.36\pic\s
      +                          ources\c90\common\doprnt.c: 521:  signed char prec;;G:\nainstalovane_programy\Microchip\
      +                          xc8\v2.36\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
   702  07DE  3070               	movlw	(low (?_printf| 0))& (0+255)
   703  07DF  00F0               	movwf	??_printf
   704  07E0  0870               	movf	??_printf,w
   705  07E1  00F1               	movwf	printf@ap
   706                           
   707                           ;G:\nainstalovane_programy\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  wh
      +                          ile((c = *f++)) {
   708  07E2  2FE9               	goto	l697
   709  07E3                     l695:
   710                           
   711                           ;G:\nainstalovane_programy\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {
      +                          ;G:\nainstalovane_programy\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    
      +                          (putch(c) );
   712  07E3  0872               	movf	printf@c,w
   713  07E4  120A  118A  2797  120A  118A  	fcall	_putch
   714  07E9                     l697:	
   715                           ;G:\nainstalovane_programy\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    
      +                          continue;
   716                           
   717                           
   718                           ;G:\nainstalovane_programy\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  wh
      +                          ile((c = *f++)) {
   719  07E9  3001               	movlw	1
   720  07EA  07F3               	addwf	printf@f,f
   721  07EB  30FF               	movlw	-1
   722  07EC  0773               	addwf	printf@f,w
   723  07ED  0084               	movwf	4
   724  07EE  120A  118A  2003  120A  118A  	fcall	stringdir
   725  07F3  00F0               	movwf	??_printf
   726  07F4  0870               	movf	??_printf,w
   727  07F5  00F2               	movwf	printf@c
   728  07F6  0872               	movf	printf@c,w
   729  07F7  1D03               	btfss	3,2
   730  07F8  2FFA               	goto	u21
   731  07F9  2FFB               	goto	u20
   732  07FA                     u21:
   733  07FA  2FE3               	goto	l695
   734  07FB                     u20:
   735  07FB                     l128:
   736  07FB  0008               	return
   737  07FC                     __end_of_printf:
   738                           
   739                           	psect	text4
   740  0797                     __ptext4:	
   741 ;; *************** function _putch *****************
   742 ;; Defined at:
   743 ;;		line 7 in file "G:\nainstalovane_programy\Microchip\xc8\v2.36\pic\sources\c90\common\putch.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;  c               1    wreg     unsigned char 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  c               1    0[COMMON] unsigned char 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0
   760 ;;      Totals:         0       0       0       0       0
   761 ;;Total ram usage:        0 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_printf
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770  0797                     _putch:	
   771                           ;psect for function _putch
   772                           
   773  0797                     l583:	
   774                           ;incstack = 0
   775                           ; Regs used in _putch: [wreg]
   776                           
   777  0797  0008               	return
   778  0798                     __end_of_putch:
   779                           
   780                           	psect	text5
   781  079E                     __ptext5:	
   782 ;; *************** function _clock_init *****************
   783 ;; Defined at:
   784 ;;		line 22 in file "main.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  bits            1    0[COMMON] struct .
   789 ;; Return value:  Size  Location     Type
   790 ;;                  2   12[None  ] int 
   791 ;; Registers used:
   792 ;;		wreg, status,2, status,0
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         1       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0
   801 ;;      Totals:         1       0       0       0       0
   802 ;;Total ram usage:        1 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811  079E                     _clock_init:	
   812                           ;psect for function _clock_init
   813                           
   814  079E                     l641:	
   815                           ;incstack = 0
   816                           ; Regs used in _clock_init: [wreg+status,2+status,0]
   817                           
   818                           
   819                           ;main.c: 24:     return 0;;main.c: 25: }
   820  079E  0870               	movf	clock_init@bits,w
   821  079F  398F               	andlw	-113
   822  07A0  3860               	iorlw	96
   823  07A1  00F0               	movwf	clock_init@bits
   824  07A2                     l643:
   825  07A2  1470               	bsf	clock_init@bits,0
   826  07A3                     l645:
   827  07A3  0870               	movf	clock_init@bits,w
   828  07A4  1683               	bsf	3,5	;RP0=1, select bank1
   829  07A5  1303               	bcf	3,6	;RP1=0, select bank1
   830  07A6  008F               	movwf	15	;volatile
   831  07A7                     l13:
   832  07A7  0008               	return
   833  07A8                     __end_of_clock_init:
   834  007E                     btemp	set	126	;btemp
   835  007E                     wtemp0	set	126
   836                           
   837                           	psect	idloc
   838                           
   839                           ;Config register IDLOC0 @ 0x2000
   840                           ;	unspecified, using default values
   841  2000                     	org	8192
   842  2000  3FFF               	dw	16383
   843                           
   844                           ;Config register IDLOC1 @ 0x2001
   845                           ;	unspecified, using default values
   846  2001                     	org	8193
   847  2001  3FFF               	dw	16383
   848                           
   849                           ;Config register IDLOC2 @ 0x2002
   850                           ;	unspecified, using default values
   851  2002                     	org	8194
   852  2002  3FFF               	dw	16383
   853                           
   854                           ;Config register IDLOC3 @ 0x2003
   855                           ;	unspecified, using default values
   856  2003                     	org	8195
   857  2003  3FFF               	dw	16383
   858                           
   859                           	psect	config
   860                           
   861                           ;Config register CONFIG @ 0x2007
   862                           ;	Oscillator Selection bits
   863                           ;	FOSC = EXTRCCLK, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT/T1OSO pin, RC on RA
      +                          7/OSC1/CLKIN/T1OSI
   864                           ;	Watchdog Timer Enable bit
   865                           ;	WDTE = ON, WDT enabled
   866                           ;	Power Up Timer Enable bit
   867                           ;	PWRTE = OFF, PWRT disabled
   868                           ;	RE3/MCLR pin function select bit
   869                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   870                           ;	Code Protection bit
   871                           ;	CP = OFF, Program memory code protection is disabled
   872                           ;	Data Code Protection bit
   873                           ;	CPD = OFF, Data memory code protection is disabled
   874                           ;	Brown-out Reset Selection bits
   875                           ;	BOREN = ON, BOR enabled
   876                           ;	Internal External Switchover bit
   877                           ;	IESO = ON, Internal/External Switchover mode is enabled
   878                           ;	Fail-Safe Clock Monitor Enabled bit
   879                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   880                           ;	In-Circuit Debugger Mode bit
   881                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6/ISCPCLK and RB7/ICSPDAT are general pur
      +                          pose I/O pins
   882  2007                     	org	8199
   883  2007  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            80      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     186
                                              4 COMMON     1     1      0
                         _clock_init
                             _printf
                     _uart_send_char
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _uart_send_char                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              16    16      0      79
                                              0 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _clock_init                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clock_init
   _printf
     _putch
   _uart_send_char
   _usart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BITBANK3            60      0       0       7        0.0%
BANK3               60      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
ABS                  0      0       0      10        0.0%
BITBANK2            50      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Mar 14 22:36:13 2022

                      pc 0002                       l13 07A7                       l33 079D  
                     l18 07DA                       l36 07BF                       u20 07FB  
                     u21 07FA                       fsr 0004                      l128 07FB  
                    l701 07C2                      l703 07C4                      l641 079E  
                    l705 07C9                      l643 07A2                      l651 07AC  
                    l707 07CE                      l645 07A3                      l661 07B4  
                    l653 07B0                      l709 07D4                      l583 0797  
                    l663 07B5                      l655 07B1                      l665 07B6  
                    l657 07B2                      l649 07A8                      l659 07B3  
                    l693 07DE                      l669 0799                      l695 07E3  
                    l697 07E9                      l699 07C0                      fsr0 0004  
                   STR_1 0009                     _TXIE 0464                     _TXEN 04C5  
                   _main 07C0                     btemp 007E                     start 0000  
       ??_uart_send_char 0070                    ?_main 0070                    _RCSTA 0018  
                  _SPBRG 0099                    _TXREG 0019                    _TXSTA 0098  
                  _putch 0797                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07DD  
                 ??_main 0074                   ?_putch 0070                   _INTCON 000B  
                 _OSCCON 008F                   _printf 07DD                   putch@c 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_putch 0798  
                ??_putch 0070               __pmaintext 07C0                  ?_printf 0070  
             _clock_init 079E               __stringtab 0003           main@inter_bits 0074  
                __ptext1 07A8                  __ptext2 0798                  __ptext3 07DD  
                __ptext4 0797                  __ptext5 079E     end_of_initialization 07FC  
                printf@c 0072                  printf@f 0073              ?_clock_init 0070  
             _usart_init 07A8           __end_of_printf 07FC      start_initialization 07FC  
               ??_printf 0070                ___latbits 0002              ?_usart_init 0070  
              __pstrings 0003           _uart_send_char 0798   __end_of_uart_send_char 079E  
           ??_clock_init 0070              __stringbase 0008       __end_of_clock_init 07A8  
         clock_init@bits 0070          ?_uart_send_char 0070       __end_of__stringtab 0009  
      usart_init@rx_bits 0071        usart_init@tx_bits 0070          uart_send_char@c 0070  
           ??_usart_init 0070                stringcode 0003                 printf@ap 0071  
               stringdir 0003                 stringtab 0003       __end_of_usart_init 07C0  
